predict(myfit4, newdata = data.frame("dis" = 6))
myfit5 = lm(nox ~ bs(dis, df = 5, intercept = TRUE), data=Boston)
myfit6 = lm(nox ~ bs(dis, knots = quantile(dis, prob = c(0.25, 0.5, 0.75))), data=Boston)
predict(myfit5, newdata = data.frame("dis" = 6))
predict(myfit6, newdata = data.frame("dis" = 6))
myfit2 = lm(nox ~ bs(dis, df=4), data=Boston)
myfit2 = lm(nox ~ bs(dis, df=4), data=Boston)
a <- lm(nox ~ ploy(dis, 3), data=Boston)
a <- lm(nox ~ poly(dis, 3), data=Boston)
b <- lm(nox ~ bs(dis, df = 5, intercept = TRUE), data=Boston)
c <- lm(nox ~ bs(dis, knots = quantile(dis, prob = c(0.25, 0.5, 0.75))), data=Boston)
d <- lm(nox ~ bs(dis, df = 4, intercept = TRUE), data=Boston)
e <- lm(nox ~ bs(dis, knots = median(dis)), data=Boston)
predict(a, newdata = data.frame("dis" = 6))
predict(b, newdata = data.frame("dis" = 6))
myfit2 = lm(nox ~ bs(dis, df=4), data=Boston)
a <- lm(nox ~ poly(dis, 3), data=Boston)
b <- lm(nox ~ bs(dis, df = 5, intercept = TRUE), data=Boston)
c <- lm(nox ~ bs(dis, knots = quantile(dis, prob = c(0.25, 0.5, 0.75))), data=Boston)
d <- lm(nox ~ bs(dis, df = 4, intercept = TRUE), data=Boston)
e <- lm(nox ~ bs(dis, knots = median(dis)), data=Boston)
predict(myfit2, newdata = data.frame("dis" = 6))
predict(a, newdata = data.frame("dis" = 6))
predict(b, newdata = data.frame("dis" = 6))
predict(c, newdata = data.frame("dis" = 6))
predict(d, newdata = data.frame("dis" = 6))
predict(e, newdata = data.frame("dis" = 6))
?smooth.spline
model <- lm(nox ~ poly(dis, 4), data = Boston)
predict(model, newdata = data.frame("dis" = 6))
# Chunk 1
# Install Packages
# ==================================================
packages <- c()
init.pkg <- setdiff( packages, rownames( installed.packages() ) )
if ( length(init.pkg) > 0 )
{
install.packages(init.pkg)
}
lapply(packages, require, character.only = TRUE)
# Chunk 2
# Set Up Environment
# ==================================================
set.seed(19920917)
setwd('C:\\Users\\andre\\Desktop\\travelate\\R')
df <- read.csv('../data/hotels.csv')
# Chunk 3
# Number of Hotel Names
nrow(unique(df["Hotel_Name"]))
# Export Hotel Frequency
hotel.names <- as.data.frame( table(df["Hotel_Name"]) )
hotel.names <- hotel.names[ order( hotel.names$Freq, decreasing = TRUE ), c(1,2) ]
write.csv( hotel.names, file = "../data/hotels_names.csv" )
# Chunk 4
# Select Vaiables of Interest
# ==================================================
df <- subset(df, select = -c( Additional_Number_of_Scoring,
Review_Date,
Reviewer_Nationality,
Review_Total_Negative_Word_Counts,
Review_Total_Positive_Word_Counts,
Total_Number_of_Reviews_Reviewer_Has_Given,
lat,
lng ))
# Chunk 5
# Normalize Average_Score and Reviewer_Score
df["Average_Score"]  <- round( ( df["Average_Score"] / 10 ), 2 )
df["Reviewer_Score"] <- round( ( df["Reviewer_Score"] / 10 ), 2 )
# Chunk 6
# Transform days_since_review to Integer
df["days_since_review"] <- as.integer( unlist( df["days_since_review"] ) )
# Chunk 7
# Transform Tags Variable into Array
tags <- as.character( unlist( df["Tags"] ) )
tags <- strsplit( tags, "[ ',]" )
remove <- c("", "[", "]", NA)
df["Tags"] <- as.character( unlist( df["Tags"] ) )
for ( i in 1:length( tags ) )
{
df[i, "Tags"] <- paste( subset( tags[[i]],
!(tags[[i]] %in% remove ) ), collapse = " " )
if (i %% 1000 == 0) { print( i ) }
}
# Chunk 8
# Write Updated CSV
write.csv( df, file = "../data/hotels_2.csv" )
# Chunk 9
# Get Frequency of Countries
countries <- rep( '', nrow(df) )
for ( row in 1:nrow(df) )
{
iter           <- strsplit(as.character( df[row, 1] ), " ")
iter           <- unlist( iter )
countries[row] <- iter[ length( iter ) ]
}
# Chunk 10
# Write Country distribution to CSV
write.csv( as.data.frame(table(countries)), file = "../data/countries.csv" )
# Chunk 11
temp.df <- read.csv('../data/hotels_2.csv')
temp.df <- temp.df[, -1]
temp.countries <- rep( '', nrow(temp.df) )
for ( row in 1:length(temp.countries) )
{
iter                <- strsplit(as.character( temp.df[row, 1] ), " ")
iter                <- unlist( iter )
temp.countries[row] <- iter[ length( iter ) ]
}
temp.df.2 <- cbind(temp.countries, temp.df)
netherlands.df <- temp.df.2[ temp.df.2 == "Netherlands", ]
austria.df     <- temp.df.2[ temp.df.2 == "Austria", ]
france.df      <- temp.df.2[ temp.df.2 == "France", ]
italy.df       <- temp.df.2[ temp.df.2 == "Italy", ]
kingdom.df     <- temp.df.2[ temp.df.2 == "Kingdom", ]
spain.df       <- temp.df.2[ temp.df.2 == "Spain", ]
netherlands.df <- netherlands.df[ sample( nrow(netherlands.df), 10000 ), ]
austria.df     <- austria.df    [ sample( nrow(austria.df),     10000 ), ]
france.df      <- france.df     [ sample( nrow(france.df),      10000 ), ]
italy.df       <- italy.df      [ sample( nrow(italy.df),       10000 ), ]
kingdom.df     <- kingdom.df    [ sample( nrow(kingdom.df),     10000 ), ]
spain.df       <- spain.df      [ sample( nrow(spain.df),       10000 ), ]
temp.df.3 <- rbind(netherlands.df, austria.df, france.df, italy.df, kingdom.df, spain.df )
temp.df.3 <- temp.df.3[ sample( nrow(temp.df.3), nrow(temp.df.3) ), ]
colnames(temp.df.3) <- c('Hotel Address', 'Tags', 'Reviewer Score', 'Country', 'Total Reviews',
'Hotel Name', 'Average Score', 'Negative Review', 'Positive Review', 'Days Since Review')
write.csv( temp.df.3, file = "../data/hotels_3.csv", row.names = FALSE )
# Chunk 12
sentiment.df <- read.csv('../data/hotels_3_with_review_score.csv')
# Chunk 13
# neg.omit.array <- c('no', 'no negative', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say')
# pos.omit.array <- c('no', 'no positive', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say')
#
# temp.df.3[, 'Negative_Review'] <- tolower( as.character( temp.df.3[, 'Negative_Review'] ) )
# temp.df.3[, 'Positive_Review'] <- tolower( as.character( temp.df.3[, 'Positive_Review'] ) )
#
# for ( i in 1:nrow(temp.df.3) )
# {
#     if ( any( temp.df.3[i, 'Negative_Review'] == neg.omit.array ) )
#     {
#         temp.df.3[i, 'Negative_Review'] <- ''
#     }
#
#     if ( any( temp.df.3[i, 'Positive_Review'] == pos.omit.array ) )
#     {
#         temp.df.3[i, 'Positive_Review'] <- ''
#     }
# }
getwd()
set.seed(19920917)
setwd('C:\\Users\\scott\\Desktop\\Travelate\\Travelate\\R')
setwd('C:\\Users\\scott\\Desktop\\project\\Travelate\\Travelate\\R')
# Chunk 1
# Install Packages
# ==================================================
packages <- c()
init.pkg <- setdiff( packages, rownames( installed.packages() ) )
if ( length(init.pkg) > 0 )
{
install.packages(init.pkg)
}
lapply(packages, require, character.only = TRUE)
# Chunk 2
# Set Up Environment
# ==================================================
set.seed(19920917)
setwd('C:\\Users\\scott\\Desktop\\project\\Travelate\\Travelate\\R')
df <- read.csv('../data/hotels.csv')
# Chunk 3
# Number of Hotel Names
nrow(unique(df["Hotel_Name"]))
# Export Hotel Frequency
hotel.names <- as.data.frame( table(df["Hotel_Name"]) )
hotel.names <- hotel.names[ order( hotel.names$Freq, decreasing = TRUE ), c(1,2) ]
write.csv( hotel.names, file = "../data/hotels_names.csv" )
# Chunk 4
# Select Vaiables of Interest
# ==================================================
df <- subset(df, select = -c( Additional_Number_of_Scoring,
Review_Date,
Reviewer_Nationality,
Review_Total_Negative_Word_Counts,
Review_Total_Positive_Word_Counts,
Total_Number_of_Reviews_Reviewer_Has_Given,
lat,
lng ))
# Chunk 5
# Normalize Average_Score and Reviewer_Score
df["Average_Score"]  <- round( ( df["Average_Score"] / 10 ), 2 )
df["Reviewer_Score"] <- round( ( df["Reviewer_Score"] / 10 ), 2 )
# Chunk 6
# Transform days_since_review to Integer
df["days_since_review"] <- as.integer( unlist( df["days_since_review"] ) )
# Chunk 7
# Transform Tags Variable into Array
tags <- as.character( unlist( df["Tags"] ) )
tags <- strsplit( tags, "[ ',]" )
remove <- c("", "[", "]", NA)
df["Tags"] <- as.character( unlist( df["Tags"] ) )
for ( i in 1:length( tags ) )
{
df[i, "Tags"] <- paste( subset( tags[[i]],
!(tags[[i]] %in% remove ) ), collapse = " " )
if (i %% 1000 == 0) { print( i ) }
}
# Chunk 8
# Write Updated CSV
write.csv( df, file = "../data/hotels_2.csv" )
# Chunk 9
# Get Frequency of Countries
countries <- rep( '', nrow(df) )
for ( row in 1:nrow(df) )
{
iter           <- strsplit(as.character( df[row, 1] ), " ")
iter           <- unlist( iter )
countries[row] <- iter[ length( iter ) ]
}
# Chunk 10
# Write Country distribution to CSV
write.csv( as.data.frame(table(countries)), file = "../data/countries.csv" )
# Chunk 11
temp.df <- read.csv('../data/hotels_2.csv')
temp.df <- temp.df[, -1]
temp.countries <- rep( '', nrow(temp.df) )
for ( row in 1:length(temp.countries) )
{
iter                <- strsplit(as.character( temp.df[row, 1] ), " ")
iter                <- unlist( iter )
temp.countries[row] <- iter[ length( iter ) ]
}
temp.df.2 <- cbind(temp.countries, temp.df)
netherlands.df <- temp.df.2[ temp.df.2 == "Netherlands", ]
austria.df     <- temp.df.2[ temp.df.2 == "Austria", ]
france.df      <- temp.df.2[ temp.df.2 == "France", ]
italy.df       <- temp.df.2[ temp.df.2 == "Italy", ]
kingdom.df     <- temp.df.2[ temp.df.2 == "Kingdom", ]
spain.df       <- temp.df.2[ temp.df.2 == "Spain", ]
netherlands.df <- netherlands.df[ sample( nrow(netherlands.df), 10000 ), ]
austria.df     <- austria.df    [ sample( nrow(austria.df),     10000 ), ]
france.df      <- france.df     [ sample( nrow(france.df),      10000 ), ]
italy.df       <- italy.df      [ sample( nrow(italy.df),       10000 ), ]
kingdom.df     <- kingdom.df    [ sample( nrow(kingdom.df),     10000 ), ]
spain.df       <- spain.df      [ sample( nrow(spain.df),       10000 ), ]
temp.df.3 <- rbind(netherlands.df, austria.df, france.df, italy.df, kingdom.df, spain.df )
temp.df.3 <- temp.df.3[ sample( nrow(temp.df.3), nrow(temp.df.3) ), ]
colnames(temp.df.3) <- c('Hotel Address', 'Tags', 'Reviewer Score', 'Country', 'Total Reviews',
'Hotel Name', 'Average Score', 'Negative Review', 'Positive Review', 'Days Since Review')
write.csv( temp.df.3, file = "../data/hotels_3.csv", row.names = FALSE )
# Chunk 12
sentiment.df <- read.csv('../data/hotels_3_with_review_score.csv')
# Chunk 13
# neg.omit.array <- c('no', 'no negative', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say')
# pos.omit.array <- c('no', 'no positive', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say')
#
# temp.df.3[, 'Negative_Review'] <- tolower( as.character( temp.df.3[, 'Negative_Review'] ) )
# temp.df.3[, 'Positive_Review'] <- tolower( as.character( temp.df.3[, 'Positive_Review'] ) )
#
# for ( i in 1:nrow(temp.df.3) )
# {
#     if ( any( temp.df.3[i, 'Negative_Review'] == neg.omit.array ) )
#     {
#         temp.df.3[i, 'Negative_Review'] <- ''
#     }
#
#     if ( any( temp.df.3[i, 'Positive_Review'] == pos.omit.array ) )
#     {
#         temp.df.3[i, 'Positive_Review'] <- ''
#     }
# }
set.seed(19920917)
setwd('C:\\Users\\scott\\Desktop\\project\\Travelate\\Travelate\\R')
df <- read.csv('../data/hotels.csv')
setwd('C:\\Users\\scott\\Desktop\\project\\Travelate\\Travelate\\R')
sentiment.df <- read.csv('../data/hotels_3_with_review_score.csv')
neg.omit.array <- c('no', 'no negative', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say')
pos.omit.array <- c('no', 'no positive', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say')
View(sentiment.df)
sentiment.df[, 'Negative_Review'] <- tolower( as.character( sentiment.df[, 'Negative_Review'] ) )
sentiment.df[, 'Positive_Review'] <- tolower( as.character( sentiment.df[, 'Positive_Review'] ) )
sentiment.df[, 'Negative.Review'] <- tolower( as.character( sentiment.df[, 'Negative.Review'] ) )
sentiment.df[, 'Positive.Review'] <- tolower( as.character( sentiment.df[, 'Positive.Review'] ) )
neg.omit.array <- c('no', 'no negative', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say')
pos.omit.array <- c('no', 'no positive', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say')
sentiment.df[, 'Negative.Review'] <- tolower( as.character( sentiment.df[, 'Negative.Review'] ) )
sentiment.df[, 'Positive.Review'] <- tolower( as.character( sentiment.df[, 'Positive.Review'] ) )
for ( i in 1:nrow(sentiment.df) )
{
if ( sentiment.df[i, 'Negative.Review'] %in% neg.omit.array )
{
sentiment.df[i, 'Negative.Review'] <- ''
}
if ( sentiment.df[i, 'Positive.Review'] %in% pos.omit.array )
{
sentiment.df[i, 'Positive.Review'] <- ''
}
}
sentiment.df[4, 'Negative.Review'] %in% neg.omit.array
neg.omit.array
sentiment.df[4, 'Negative.Review']
sentiment.df[39, 'Negative.Review']
sentiment.df[, 'Negative.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Negative.Review'] ) ) )
sentiment.df[, 'Positive.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Positive.Review'] ) ) )
sentiment.df[39, 'Negative.Review']
sentiment.df[4, 'Negative.Review']
sentiment.df[, 'Negative.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Negative.Review'] ) ) )
sentiment.df[, 'Positive.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Positive.Review'] ) ) )
for ( i in 1:nrow(sentiment.df) )
{
if ( sentiment.df[i, 'Negative.Review'] %in% neg.omit.array )
{
sentiment.df[i, 'Negative.Review'] <- ''
}
if ( sentiment.df[i, 'Positive.Review'] %in% pos.omit.array )
{
sentiment.df[i, 'Positive.Review'] <- ''
}
}
?grepl()
sentiment.df <- read.csv('../data/hotels_3_with_review_score.csv')
neg.omit.array <- c('no', 'no negative', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular')
pos.omit.array <- c('no', 'no positive', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular')
sentiment.df[, 'Negative.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Negative.Review'] ) ) )
sentiment.df[, 'Positive.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Positive.Review'] ) ) )
for ( i in 1:nrow(sentiment.df) )
{
if ( grepl(sentiment.df[i, 'Negative.Review'], neg.omit.array) )
{
sentiment.df[i, 'Negative.Review'] <- ''
}
if ( grepl(sentiment.df[i, 'Positive.Review'], pos.omit.array) )
{
sentiment.df[i, 'Positive.Review'] <- ''
}
}
repl(sentiment.df[4, 'Negative.Review'], neg.omit.array)
grepl(sentiment.df[4, 'Negative.Review'], neg.omit.array)
any(grepl(sentiment.df[i, 'Negative.Review'], neg.omit.array))
neg.omit.array <- c('no', 'none', 'nothing', 'nil', 'n a', 'na')
pos.omit.array <- c('no', 'none', 'nothing', 'nil', 'n a', 'na')
sentiment.df[, 'Negative.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Negative.Review'] ) ) )
sentiment.df[, 'Positive.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Positive.Review'] ) ) )
sentiment.df <- read.csv('../data/hotels_3_with_review_score.csv')
neg.omit.array <- c('no', 'none', 'nothing', 'nil', 'n a', 'na')
pos.omit.array <- c('no', 'none', 'nothing', 'nil', 'n a', 'na')
sentiment.df[, 'Negative.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Negative.Review'] ) ) )
sentiment.df[, 'Positive.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Positive.Review'] ) ) )
for ( i in 1:nrow(sentiment.df) )
{
if ( any(grepl(sentiment.df[i, 'Negative.Review'], neg.omit.array)) )
{
sentiment.df[i, 'Negative.Review'] <- ''
}
if ( any(grepl(sentiment.df[i, 'Positive.Review'], pos.omit.array)) )
{
sentiment.df[i, 'Positive.Review'] <- ''
}
}
any(grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array))
sentiment.df[2, 'Negative.Review']
grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array)
neg.omit.array <- c('no', 'none', 'nothing', 'nil', 'n a', 'na')
pos.omit.array <- c('no', 'none', 'nothing', 'nil', 'n a', 'na')
grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array)
neg.omit.array <- c('no ', 'none', 'nothing', 'nil', 'n a', 'na')
grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array)
sentiment.df[2, 'Negative.Review']
neg.omit.array
neg.omit.array <- c('no', 'none', 'nothing', 'nil', 'n a', 'na')
neg.omit.array <- c('no', 'none', 'nothing', 'nil', 'n a', 'na')
neg.omit.array
sentiment.df[2, 'Negative.Review']
grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array)
grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array, fixed = TRUE)
grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array, fixed = FALSE)
grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array, fixed = FALSE, ignore.case = TRUE)
grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array, fixed = TRUE, ignore.case = TRUE)
grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array, fixed = FALSE, ignore.case = TRUE)
sentiment.df <- read.csv('../data/hotels_3_with_review_score.csv')
neg.omit.array <- c('no', 'none', 'nothing', 'nil', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular')
pos.omit.array <- c('no', 'none', 'nothing', 'nil', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular')
sentiment.df[, 'Negative.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Negative.Review'] ) ) )
sentiment.df[, 'Positive.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Positive.Review'] ) ) )
for ( i in 1:nrow(sentiment.df) )
{
if ( any(grepl(sentiment.df[i, 'Negative.Review'], neg.omit.array)) )
{
sentiment.df[i, 'Negative.Review'] <- ''
}
if ( any(grepl(sentiment.df[i, 'Positive.Review'], pos.omit.array)) )
{
sentiment.df[i, 'Positive.Review'] <- ''
}
}
sentiment.df <- read.csv('../data/hotels_3_with_review_score.csv')
neg.omit.array <- c('no', 'no negative', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular')
pos.omit.array <- c('no', 'no positive', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular')
sentiment.df[, 'Negative.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Negative.Review'] ) ) )
sentiment.df[, 'Positive.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Positive.Review'] ) ) )
for ( i in 1:nrow(sentiment.df) )
{
if ( any(grepl(sentiment.df[i, 'Negative.Review'], neg.omit.array)) )
{
sentiment.df[i, 'Negative.Review'] <- ''
}
if ( any(grepl(sentiment.df[i, 'Positive.Review'], pos.omit.array)) )
{
sentiment.df[i, 'Positive.Review'] <- ''
}
}
sentiment.df <- read.csv('../data/hotels_3_with_review_score.csv')
neg.omit.array <- c('no', 'no negative', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular', 'no complaints')
pos.omit.array <- c('no', 'no positive', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular', 'no complaints')
sentiment.df[, 'Negative.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Negative.Review'] ) ) )
sentiment.df[, 'Positive.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Positive.Review'] ) ) )
for ( i in 1:nrow(sentiment.df) )
{
if ( any(grepl(sentiment.df[i, 'Negative.Review'], neg.omit.array)) )
{
sentiment.df[i, 'Negative.Review'] <- ''
}
if ( any(grepl(sentiment.df[i, 'Positive.Review'], pos.omit.array)) )
{
sentiment.df[i, 'Positive.Review'] <- ''
}
}
neg.omit.array
any(grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array))
grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array)
sentiment.df[2, 'Negative.Review']
neg.omit.array <- c('no', 'no negative', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular', 'complaints')
grepl(sentiment.df[2, 'Negative.Review'], neg.omit.array)
neg.omit.array
neg.omit.array <- c('no', 'no negative', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular', 'complaints')
pos.omit.array <- c('no', 'no positive', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular', 'complaints')
sentiment.df[, 'Negative.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Negative.Review'] ) ) )
sentiment.df[, 'Positive.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Positive.Review'] ) ) )
for ( i in 1:nrow(sentiment.df) )
{
if ( any(grep(sentiment.df[i, 'Negative.Review'], neg.omit.array)) )
{
sentiment.df[i, 'Negative.Review'] <- ''
}
if ( any(grep(sentiment.df[i, 'Positive.Review'], pos.omit.array)) )
{
sentiment.df[i, 'Positive.Review'] <- ''
}
}
grep(sentiment.df[2, 'Negative.Review'], neg.omit.array)
?str_detec
?str_detect
packages <- c('stringr')
init.pkg <- setdiff( packages, rownames( installed.packages() ) )
if ( length(init.pkg) > 0 )
{
install.packages(init.pkg)
}
lapply(packages, require, character.only = TRUE)
?str_detect
any(str_detect(sentiment.df[i, 'Negative.Review'], neg.omit.array))
any(str_detect(sentiment.df[2, 'Negative.Review'], neg.omit.array))
setwd('C:\\Users\\scott\\Desktop\\project\\Travelate\\Travelate\\R')
sentiment.df <- read.csv('../data/hotels_3_with_review_score.csv')
neg.omit.array <- c('no', 'no negative', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular', 'complaints')
pos.omit.array <- c('no', 'no positive', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular', 'complaints')
sentiment.df[, 'Negative.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Negative.Review'] ) ) )
sentiment.df[, 'Positive.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Positive.Review'] ) ) )
for ( i in 1:nrow(sentiment.df) )
{
if ( any(str_detect(sentiment.df[i, 'Negative.Review'], neg.omit.array)) )
{
sentiment.df[i, 'Negative.Review'] <- ''
}
if ( any(str_detect(sentiment.df[i, 'Positive.Review'], pos.omit.array)) )
{
sentiment.df[i, 'Positive.Review'] <- ''
}
}
sentiment.df <- read.csv('../data/hotels_3_with_review_score.csv')
neg.omit.array <- c('no', 'no negative', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular', 'no complaints')
pos.omit.array <- c('no', 'no positive', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular', 'no complaints')
sentiment.df[, 'Negative.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Negative.Review'] ) ) )
sentiment.df[, 'Positive.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Positive.Review'] ) ) )
for ( i in 1:nrow(sentiment.df) )
{
# if ( any(str_detect(sentiment.df[i, 'Negative.Review'], neg.omit.array)) )
if ( any(sentiment.df[i, 'Negative.Review'] %in% neg.omit.array) )
{
sentiment.df[i, 'Negative.Review'] <- ''
}
# if ( any(str_detect(sentiment.df[i, 'Positive.Review'], pos.omit.array)) )
if ( any(sentiment.df[i, 'Positive.Review'] %in% pos.omit.array) )
{
sentiment.df[i, 'Positive.Review'] <- ''
}
}
omit.array <- c('no', 'no negative', 'no positive', 'none', 'nothing', 'nil', 'nothing really', 'n a', 'na', 'nothing to say', 'nothing at all', 'nothing in particular', 'no complaints', 'nothing worth mentioning')
sentiment.df[, 'Negative.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Negative.Review'] ) ) )
sentiment.df[, 'Positive.Review'] <- trimws( tolower( as.character( sentiment.df[, 'Positive.Review'] ) ) )
for ( i in 1:nrow(sentiment.df) )
{
# if ( any(str_detect(sentiment.df[i, 'Negative.Review'], neg.omit.array)) )
if ( any(sentiment.df[i, 'Negative.Review'] %in% omit.array) )
{
sentiment.df[i, 'Negative.Review'] <- ''
}
# if ( any(str_detect(sentiment.df[i, 'Positive.Review'], pos.omit.array)) )
if ( any(sentiment.df[i, 'Positive.Review'] %in% omit.array) )
{
sentiment.df[i, 'Positive.Review'] <- ''
}
}
write.csv( temp.df.3, file = "../data/hotels_4.csv", row.names = FALSE )
write.csv( sentiment.df, file = "../data/hotels_4.csv", row.names = FALSE )
